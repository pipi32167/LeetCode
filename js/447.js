const assert = require('assert');

var distance = function (p1, p2) {
  const len1 = (p2[0] - p1[0])
  const len2 = (p2[1] - p1[1])
  return Math.pow(len1 * len1 + len2 * len2, 0.5)
  // return Math.pow(Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2), 0.5)
}

// assert.equal(distance([0, 3], [4, 0]), 5)
// assert.equal(distance([0, 3], [0, 4]), 1)

// var numberOfBoomerangs = function (points) {

//   let now = Date.now()

//   var dp = new Array(points.length).fill(0).map(e => new Array(points.length).fill(0))
//   // var dp2 = new Array(points.length).fill(0).map(e => [])
//   for (let i = 0; i < points.length; i++) {
//     for (let j = i + 1; j < points.length; j++) {
//       const dist = distance(points[i], points[j])
//       dp[j][i] = dp[i][j] = dist
//     }
//   }

//   console.log('step1: %d ms', Date.now() - now);
//   now = Date.now();

//   let count = 0
//   for (let i = 0; i < points.length; i++) {
//     for (let j = 0; j < points.length; j++) {
//       if (i === j) {
//         continue
//       }
//       for (let k = 0; k < points.length; k++) {
//         if (i === k || j === k) {
//           continue
//         }

//         if (dp[i][j] === dp[j][k]) {
//           // result.push([points[i], points[j], points[k]])
//           count++
//         }
//       }
//     }
//   }

//   console.log('step2: %d ms', Date.now() - now);
//   now = Date.now();
//   // console.log(result);
//   // return result.length;
//   return count
// }

var factorial = function (n) {
  let res = 1
  for (let i = 2; i <= n; i++) {
    res *= i
  }
  return res
}

var calcCount = function (n) {
  if (n <= 1) {
    return 0
  }
  return factorial(n) / factorial(n - 2)
}

// assert.equal(calcCount(1), 0)
// assert.equal(calcCount(2), 2)
// assert.equal(calcCount(3), 6)

var numberOfBoomerangs = function (points) {

  // let now = Date.now()

  let dp2 = new Array(points.length).fill(0).map(e => new Map())

  for (let i = 0; i < points.length; i++) {
    for (let j = i + 1; j < points.length; j++) {
      const dist = distance(points[i], points[j])
      let count = dp2[i].get(dist) || 0
      dp2[i].set(dist, count + 1)

      count = dp2[j].get(dist) || 0
      dp2[j].set(dist, count + 1)
    }
  }

  // console.log('step1: %d ms', Date.now() - now);
  // now = Date.now();

  let count = 0
  for (let i = 0; i < dp2.length; i++) {
    for (const v of dp2[i].values()) {
      count += calcCount(v)
    }
  }

  // console.log(dp2);
  // console.log('step2: %d ms', Date.now() - now);
  // now = Date.now();

  return count
}

assert.equal(numberOfBoomerangs([
  [0, 0],
  [1, 0],
  [2, 0]
]), 2)

let now = Date.now()
assert.equal(numberOfBoomerangs(
  [
    [536, 127],
    [906, 999],
    [697, 316],
    [260, 839],
    [570, 567],
    [986, 486],
    [8, 767],
    [277, 966],
    [136, 435],
    [693, 37],
    [946, 719],
    [367, 212],
    [96, 934],
    [540, 117],
    [95, 674],
    [950, 631],
    [802, 208],
    [630, 851],
    [525, 242],
    [690, 447],
    [161, 676],
    [934, 169],
    [795, 563],
    [135, 931],
    [351, 180],
    [320, 297],
    [900, 688],
    [861, 996],
    [974, 401],
    [114, 69],
    [428, 416],
    [52, 582],
    [625, 682],
    [433, 502],
    [277, 123],
    [949, 790],
    [151, 235],
    [960, 946],
    [799, 447],
    [229, 502],
    [628, 549],
    [799, 528],
    [589, 13],
    [876, 563],
    [766, 990],
    [984, 194],
    [759, 36],
    [776, 384],
    [71, 209],
    [238, 700],
    [684, 539],
    [490, 835],
    [775, 450],
    [781, 926],
    [250, 362],
    [428, 878],
    [264, 579],
    [758, 853],
    [944, 634],
    [769, 711],
    [977, 105],
    [257, 736],
    [142, 34],
    [472, 565],
    [595, 710],
    [265, 632],
    [249, 107],
    [467, 376],
    [558, 601],
    [302, 160],
    [963, 82],
    [38, 227],
    [14, 796],
    [433, 958],
    [430, 554],
    [669, 407],
    [659, 927],
    [495, 801],
    [313, 967],
    [718, 260],
    [29, 335],
    [892, 631],
    [443, 712],
    [7, 353],
    [313, 662],
    [513, 628],
    [96, 551],
    [856, 110],
    [699, 641],
    [69, 481],
    [195, 90],
    [889, 854],
    [369, 736],
    [8, 682],
    [704, 726],
    [295, 733],
    [414, 187],
    [364, 857],
    [251, 724],
    [210, 564],
    [738, 723],
    [193, 834],
    [626, 401],
    [945, 325],
    [394, 366],
    [806, 589],
    [456, 47],
    [795, 826],
    [784, 803],
    [860, 840],
    [882, 155],
    [573, 648],
    [695, 290],
    [505, 946],
    [366, 67],
    [863, 104],
    [790, 408],
    [290, 768],
    [161, 235],
    [93, 555],
    [601, 251],
    [144, 410],
    [651, 291],
    [588, 435],
    [447, 448],
    [275, 681],
    [956, 200],
    [329, 651],
    [842, 834],
    [949, 560],
    [901, 164],
    [664, 43],
    [572, 955],
    [811, 733],
    [542, 256],
    [640, 496],
    [859, 136],
    [258, 510],
    [428, 846],
    [297, 875],
    [294, 924],
    [556, 250],
    [125, 885],
    [253, 319],
    [71, 555],
    [880, 324],
    [719, 896],
    [367, 644],
    [203, 530],
    [729, 746],
    [786, 370],
    [594, 645],
    [858, 852],
    [508, 286],
    [698, 805],
    [513, 344],
    [730, 421],
    [947, 207],
    [658, 200],
    [878, 729],
    [107, 758],
    [53, 179],
    [7, 772],
    [175, 210],
    [302, 904],
    [308, 440],
    [626, 902],
    [86, 485],
    [106, 946],
    [123, 804],
    [751, 637],
    [501, 833],
    [410, 448],
    [392, 69],
    [0, 271],
    [150, 108],
    [381, 556],
    [287, 388],
    [328, 462],
    [951, 983],
    [718, 259],
    [423, 345],
    [514, 861],
    [182, 972],
    [807, 657],
    [129, 911],
    [294, 630],
    [744, 57],
    [78, 137],
    [126, 78],
    [760, 628],
    [186, 141],
    [184, 825],
    [882, 865],
    [639, 833],
    [848, 358],
    [444, 623],
    [55, 310],
    [485, 589],
    [283, 644],
    [246, 412],
    [555, 893],
    [42, 300],
    [950, 120],
    [789, 428],
    [550, 549],
    [56, 737],
    [42, 241],
    [914, 924],
    [458, 554],
    [109, 658],
    [264, 554],
    [281, 319],
    [216, 118],
    [260, 499],
    [763, 506],
    [263, 318],
    [399, 305],
    [970, 701],
    [777, 111],
    [129, 328],
    [12, 186],
    [417, 55],
    [779, 683],
    [979, 589],
    [237, 89],
    [247, 853],
    [995, 880],
    [524, 211],
    [999, 784],
    [711, 114],
    [643, 326],
    [784, 42],
    [632, 107],
    [96, 761],
    [218, 225],
    [441, 231],
    [763, 210],
    [286, 894],
    [894, 617],
    [835, 483],
    [58, 82],
    [337, 53],
    [315, 213],
    [617, 314],
    [998, 680],
    [780, 641],
    [6, 564],
    [35, 638],
    [23, 131],
    [752, 242],
    [709, 545],
    [825, 824],
    [756, 463],
    [71, 2],
    [80, 906],
    [485, 491],
    [989, 174],
    [544, 656],
    [388, 161],
    [970, 738],
    [841, 102],
    [379, 848],
    [18, 766],
    [838, 42],
    [250, 942],
    [284, 959],
    [488, 461],
    [135, 596],
    [924, 206],
    [598, 356],
    [113, 435],
    [847, 454],
    [962, 744],
    [110, 702],
    [257, 432],
    [440, 451],
    [886, 171],
    [299, 904],
    [289, 489],
    [946, 539],
    [784, 582],
    [850, 272],
    [43, 986],
    [868, 319],
    [192, 818],
    [676, 657],
    [253, 875],
    [463, 215],
    [619, 925],
    [269, 877],
    [709, 709],
    [680, 595],
    [232, 331],
    [500, 522],
    [820, 446],
    [413, 956],
    [29, 264],
    [228, 424],
    [250, 448],
    [744, 794],
    [618, 772],
    [804, 872],
    [647, 267],
    [439, 619],
    [193, 709],
    [848, 254],
    [770, 528],
    [850, 355],
    [859, 350],
    [229, 31],
    [148, 642],
    [988, 177],
    [906, 568],
    [954, 508],
    [369, 698],
    [303, 987],
    [470, 107],
    [211, 469],
    [726, 3],
    [440, 271],
    [64, 288],
    [526, 186],
    [816, 376],
    [541, 27],
    [78, 122],
    [59, 226],
    [765, 399],
    [404, 23],
    [967, 358],
    [532, 688],
    [408, 187],
    [676, 230],
    [294, 239],
    [51, 372],
    [242, 492],
    [644, 306],
    [780, 522],
    [493, 949],
    [898, 386],
    [328, 976],
    [509, 387],
    [202, 626],
    [138, 958],
    [649, 458],
    [668, 181],
    [146, 428],
    [720, 174],
    [658, 14],
    [414, 62],
    [739, 656],
    [554, 735],
    [315, 334],
    [257, 160],
    [635, 507],
    [546, 964],
    [483, 55],
    [703, 37],
    [33, 842],
    [348, 683],
    [300, 368],
    [216, 446],
    [149, 937],
    [621, 159],
    [303, 387],
    [221, 42],
    [43, 775],
    [777, 710],
    [462, 386],
    [870, 97],
    [893, 417],
    [61, 728],
    [824, 117],
    [766, 858],
    [959, 466],
    [893, 259],
    [186, 109],
    [57, 335],
    [46, 30],
    [495, 702],
    [417, 716],
    [96, 813],
    [492, 874],
    [523, 306],
    [260, 394],
    [403, 506],
    [163, 817],
    [234, 339],
    [934, 352],
    [549, 893],
    [818, 442],
    [504, 5],
    [904, 913],
    [692, 302],
    [944, 187],
    [4, 361],
    [256, 101],
    [526, 748],
    [327, 50],
    [54, 939],
    [796, 809],
    [445, 311],
    [626, 680],
    [2, 912],
    [32, 552],
    [157, 203],
    [346, 661],
    [560, 250],
    [927, 252],
    [553, 871],
    [440, 557],
    [584, 48],
    [10, 111],
    [148, 337],
    [513, 554],
    [277, 661],
    [363, 74],
    [324, 342],
    [754, 326],
    [254, 139],
    [878, 764],
    [342, 225],
    [777, 902],
    [827, 704],
    [154, 380],
    [575, 946],
    [290, 160],
    [994, 300],
    [623, 142],
    [990, 488],
    [696, 619],
    [149, 412],
    [693, 825],
    [754, 448],
    [151, 360],
    [587, 382],
    [124, 929],
    [959, 902],
    [183, 786],
    [606, 337],
    [167, 534],
    [636, 809],
    [46, 630],
    [109, 669],
    [125, 451],
    [157, 173],
    [70, 658],
    [585, 764],
    [483, 339],
    [564, 986],
    [52, 503],
    [368, 176],
    [432, 327],
    [430, 967],
    [466, 37],
    [304, 633],
    [571, 292],
    [794, 617],
    [275, 255],
    [638, 400],
    [707, 147],
    [573, 777],
    [157, 159],
    [893, 992],
    [850, 457],
    [978, 902],
    [960, 347],
    [431, 744],
    [26, 861],
    [711, 492],
    [898, 368],
    [477, 821],
    [660, 271],
    [790, 287],
    [879, 780],
    [687, 586],
    [279, 613],
    [363, 436],
    [124, 609],
    [428, 974],
    [66, 759],
    [229, 27],
    [458, 660],
    [771, 484],
    [873, 835],
    [329, 124],
    [203, 158],
    [945, 215],
    [782, 88],
    [503, 661],
    [868, 542],
    [247, 500],
    [155, 962],
    [936, 631],
    [571, 717],
    [958, 638],
    [476, 187],
    [17, 934],
    [199, 140],
    [770, 72]
  ]), 966);